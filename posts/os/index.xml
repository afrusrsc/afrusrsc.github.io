<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>🖥️操作系统 on 慢步道人</title>
    <link>https://afrusrsc.github.io/posts/os/</link>
    <description>Recent content in 🖥️操作系统 on 慢步道人</description>
    <generator>Hugo -- 0.125.7</generator>
    <language>zh</language>
    <copyright>2017-2025 Jesse Jin</copyright>
    <lastBuildDate>Mon, 20 Oct 2025 21:13:08 +0800</lastBuildDate>
    <atom:link href="https://afrusrsc.github.io/posts/os/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bye~~ win10！</title>
      <link>https://afrusrsc.github.io/posts/os/bye_win10/</link>
      <pubDate>Mon, 20 Oct 2025 21:13:08 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/bye_win10/</guid>
      <description>一个消息 听说，win10停更了，第一反应是：哦，已经到时间了啊，停吧，反正也就玩游戏时会用用。
事实上，这个消息如果是在半年前，第一反应肯定是这样：哎呀，太好了，SBbug10终于不会再自动更新了，再也不用担心这SB偷偷自动更新半天、然后更新失败再回滚半天，浪费时间、浪费精力、浪费生命！
但是，不管是哪种情况，对于新的继任者——瘟尸疫（win11），打死我也不会用的，更不会买预装了瘟尸疫的电脑，实在迫不得已要在别人的瘟尸疫设备上操作，心里也是要多骂几句的。
话再说回来，现在对待win10的态度能这么平淡，其实是因为已经使用linux做主力了，毕竟最近几年在win10上使个劲儿地折腾wsl和虚拟机，就是为了转linux做主力。
转战场 其实，大概从2009年有第一台自己的电脑后不到一年，就开始接触linux了，第一次安装的发行版是wubi安装的ubuntu，再后来是物理分区装双系统；工作后5~6年，基本上都是在虚拟机里玩，ubuntu、centos、mint、debian等主流发行版都尝试过，gnome、kde、mate、xfce、cinnamon等主流的桌面环境也尝试过，不过也仅仅是尝试过而已；后来，bug10（win10）出了wsl，又玩起了wsl。
有一阵子，python爆火，无意间发现同样的python程序在wsl和win10下的性能天差地别，对win的不满（之前主要集中在SB自动更新上）瞬间爆涨。
后来学了git并做为主力工具后，linux的tab补全简直爱死了，于是wsl+git就正式成为生产力工具了。
再后来，固态硬盘开始大行其道，这本是件好事，但是无奈那些互联网大厂都推出了自己的桌面应用——清一色的浏览器套壳，真TM SB到极致了，于是，原本就喜欢绿色版的自己就变得更喜欢那些小而美的东西了。所以，debian+xfce的组合也就慢慢固定下来了。
由于一直做的是delphi开发，基本上被win锁死了，所以，很长一段时间里都是在用win，即便是双系统。
做了十年的delphi，早已厌倦了那种因个人审美及习惯不同而导致的各种算不上是真需求的需求，所以越来越倾向于去做更关注逻辑的后端。还好，碰巧遇到了这么一个机会，于是就从delphi转go了，顺便也转为linux做主力了。
其实，有了wsl+git做主力的那段经历，完全转linux做主力并没有太多不适，真要说的话，主要还是那些消费级的应用不多（在信创大环境下，还是比以前好了不少，比如：微信、QQ、wps等），以及一些硬件的驱动麻烦些，但是那些生产级的应用真的是挺好的。
不知不觉，使用linux做主力已经半年了，win10除了偶尔玩玩游戏外，几乎已经不用了，除非是需要使用个别只能在win上运行的应用。
后话 中间也尝试过很短一段时间的free bsd，除了生态更小外，没明显感觉出与linux有太大不同。
使用linux才真正感觉自己的电脑是自己的，虽然有时也会被玩坏点东西，但是网上查一下，照着敲几下命令，一般问题都能解决。</description>
    </item>
    <item>
      <title>关于xfce4-pulseaudio-plugin中文翻译的bug</title>
      <link>https://afrusrsc.github.io/posts/os/xfce4-pulseaudio-plugin_zh_cn_mo/</link>
      <pubDate>Fri, 10 Oct 2025 22:46:05 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/xfce4-pulseaudio-plugin_zh_cn_mo/</guid>
      <description>背景 系统从debian 12升到debian 13后，一直有个地方很不爽：鼠标放到状态栏的音量图标上时无法显示当前的具体音量。但是，由于升级过程出了点状况（详见Debian从12升到13的翻车记），一时不确定是自己搞出来的问题还是本来就有bug。
过程 新发现 今天无意间查看~/.xsession-errors内容时，看到大段如下重复的内容：
1 2 (wrapper-2.0:1621): Gtk-WARNING **: 21:29:52.802: Failed to set text &amp;#39;音量 30% &amp;lt;/b&amp;gt;&amp;lt;small&amp;gt;内置音频 模拟立体声&amp;lt;/small&amp;gt;&amp;#39; from markup due to error parsing markup: 第 2 行第 5 个字符出错： 元素“b”已经闭合，当前仍开放的元素是“markup” 然后瞬间就觉得这可能是个bug！查看插件的关于信息：xfce4-pulseaudio-plugin 0.4.9，卸载并重装插件：
1 2 3 4 5 6 # 卸载 sudo apt purge xfce4-pulseaudio-plugin # 重新安装 sudo apt install xfce4-pulseaudio-plugin # 重启面板 xfce4-panel -r 重启后，问题仍在。全盘搜索相关文件：
1 2 3 4 5 6 7 8 9 10 11 12 13 sudo find / -name &amp;#34;*xfce4-pulseaudio-plugin*&amp;#34; # 部分结果如下 /usr/share/icons/hicolor/48x48/apps/xfce4-pulseaudio-plugin.</description>
    </item>
    <item>
      <title>Debian从12升到13的翻车记</title>
      <link>https://afrusrsc.github.io/posts/os/debian_12to13/</link>
      <pubDate>Wed, 20 Aug 2025 20:45:47 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_12to13/</guid>
      <description>前言 之前都是在虚拟机里玩玩Debian，也就最近两年才实打实地在物理机上装了Debian 12，也一直用得挺好。
前段时间，关注已久的trixie也就是Debian 13终于发布了，虽然告诫过自己要等稳定一段时间再升级，但终究挡不过尝鲜的念头一起再起，于是在发布的第二天晚上开启了升级之路。
虽然已经研究了官方的升级文档，但还是翻车了。
升级过程 先更新当前系统的补丁 1 sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y 备份源，然后修改源，把bookworm替换为trixie 1 2 3 4 5 6 7 # 备份 sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak # 修改 sudo sed -i &amp;#39;s/bookworm/trixie/g&amp;#39; /etc/apt/sources.list # 也可用一个命令备份并修改 sudo sed -i.bak &amp;#39;s/bookworm/trixie/g&amp;#39; /etc/apt/sources.list 再进行大版本更新 1 sudo apt update &amp;amp;&amp;amp; sudo apt full-upgrade -y 更新完成后会有类似执行apt autoremove的提示，慎重执行 翻车记 翻车根源在于：大版本更新时使用了sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y，之后又无脑执行了sudo apt autoremove，好巧不巧把network-manager卸载了，没法上网了！
若是可以接有线网，插上网线，sudo apt install network-manager也就不会有后面的问题了。但是，偏偏这是在一个没有有线网的环境下。</description>
    </item>
    <item>
      <title>PC上多开微信的方法</title>
      <link>https://afrusrsc.github.io/posts/os/pc_mult_wechat/</link>
      <pubDate>Tue, 22 Jul 2025 21:13:32 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/pc_mult_wechat/</guid>
      <description>背景 随着微信在工作场景中使用得越来越多，为避免工作微信对个人生活的无缝入侵，多账号成了一个有效隔离工作和生活的手段。
但是，微信官方客户端默认不支持多账号登录，这就对有多账号登录需求的人造成了不便。
解决方案 多开的方法有很多，个人更倾向使用脚本完成，不推荐安装第三方软件。
windows win上多开的原理很简单，就是在微信彻底启动完成前启动多次，最终就会实现微信多开。可以拼手速，当然写成bat脚本更可靠。
1 2 3 4 5 6 7 8 9 10 @echo off :: 设置需要打开的微信数量 set count=2 :: 循环启动微信 for /l %%i in (1,1,%count%) do ( :: 需要填写微信实际安装路径 start &amp;#34;&amp;#34; &amp;#34;C:\Program Files (x86)\Tencent\WeChat\WeChat.exe&amp;#34; ) 美化 可以给写好的脚本创建个桌面快捷方式，然后在快捷方式上右键属性，更改图标，选择WeChat.exe，选择微信自己的图标即可。
若有开机启动的需求了，再把快捷方式加入开机启动项即可。
linux 注意：官方已经出了原生的linux版微信，以下方法是基于官方linux版，至于某些特供版是否适用尚不清楚。
在linux上多开的原理也不复杂：微信启动后会生成个锁文件（~/.xwechat/lock/lock.ini），删除即可再开一个微信。可以手动删除，当然依然是写成脚本更可靠。
1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash # 设置需要打开的微信数量 count=2 # 循环启动微信 for ((i=0; i&amp;lt;${count}; i++)); do # 需要填写微信实际安装路径 /usr/bin/wechat &amp;amp; # 0.</description>
    </item>
    <item>
      <title>Xfce4自定义用户文件夹</title>
      <link>https://afrusrsc.github.io/posts/os/xfce4_user_dirs/</link>
      <pubDate>Sun, 13 Jul 2025 10:26:19 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/xfce4_user_dirs/</guid>
      <description>背景 在Linux上，一直使用的是xfce桌面环境，要的就是一个简洁、轻量、稳定，够用却又不算丑。
但是，在中文环境下，默认的下载目录名字就是下载，在命令行下使用时还要切换输入法，麻烦，虽然可以建立软链接解决，但还是想知道有没有更直接的方法。
解决方案 一番折腾后，发现了$HOME/.config/目录下的user-dirs.dirs文件，内容如下：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # This file is written by xdg-user-dirs-update # If you want to change or add directories, just edit the line you&amp;#39;re # interested in. All local changes will be retained on the next run. # Format is XDG_xxx_DIR=&amp;#34;$HOME/yyy&amp;#34;, where yyy is a shell-escaped # homedir-relative path, or XDG_xxx_DIR=&amp;#34;/yyy&amp;#34;, where /yyy is an # absolute path.</description>
    </item>
    <item>
      <title>Debian开机自动挂载ntfs分区</title>
      <link>https://afrusrsc.github.io/posts/os/debian_mount_ntfs/</link>
      <pubDate>Thu, 12 Jun 2025 20:06:17 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_mount_ntfs/</guid>
      <description>背景 由于是win和debian双系统，并且需要在两个系统间共享使用资料分区，因此数据分区采用的是ntfs格式。虽说xfce桌面环境挂载ntfs分区不算麻烦（点下鼠标，再输个密码），但还是希望开机时就能自动挂载。
解决方案 以需要把win下的D:盘挂载到/mnt/d下为例进行说明。
准备工作 安装ntfs-3g驱动，已安装则忽略（桌面环境可挂载则证明已有驱动） 1 sudo apt update &amp;amp;&amp;amp; sudo apt install ntfs-3g 查看待挂载的ntfs分区的设备名称和UUID 1 lsblk -f # 假设设备名为 /dev/sda3，UUID 为 ABCDFE 手动创建挂载点 1 sudo mkdir /mnt/d 查看当前用户的uid和gid 1 id # 一般第一个非root的用户的 uid 和 gid 均为 1000 修改配置 编辑/etc/fstab 1 sudo vi /etc/fstab 添加如下内容并保存 1 UUID=ABCDFE /mnt/d ntfs-3g defaults,uid=1000,gid=1000,dmask=022,fmask=133,noatime,windows_names 0 0 重启 配置详解 1 &amp;lt;file system&amp;gt; &amp;lt;mount point&amp;gt; &amp;lt;type&amp;gt; &amp;lt;options&amp;gt; &amp;lt;dump&amp;gt; &amp;lt;pass&amp;gt; &amp;lt;file system&amp;gt;要挂载的设备，常见格式如下： 格式 示例 说明 设备路径 /dev/sda1 直接指定分区（不推荐，设备名可能变化） UUID UUID=1234-5678 唯一标识符（推荐，通过 blkid 或 lsblk -f 查看） 卷标 LABEL=Data 文件系统卷标（需提前用 e2label 等工具设置） 网络路径 nas:/share NFS/Samba 等网络共享路径 &amp;lt;mount point&amp;gt;挂载点，必须是已存在的空目录，一般在/mnt下</description>
    </item>
    <item>
      <title>tar分卷打包解包</title>
      <link>https://afrusrsc.github.io/posts/os/tar_split/</link>
      <pubDate>Sat, 07 Jun 2025 10:19:51 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/tar_split/</guid>
      <description>前言 tar是个极其常用的命令，也是个功能很强大的命令，单是tar --help就出来好几屏，所以常用的也只是其中一小部分。
最近看到别人用tar解压分卷大文件时，自己对tar分卷完全不了解，搜索后记录一下。
分卷打包 tar自身不包含分卷功能，需要配合split完成。
1 tar -cvf - 文件夹名/ | split -b 大小 - 输出文件名前缀 # 注意两个`-`不能省 tar也可以带上其它参数，比如-z、-j等压缩参数。
split也可以带其它参数，比如-d使用数字后缀。
解包分卷 同分卷打包类似，tar需要配合cat完成对分卷的解包。
1 2 3 4 5 6 # 先拼接后解包 cat 文件前缀* &amp;gt; 合并后的文件名 tar -xvf 合并后的文件名 # 不产生中间文件 cat 文件前缀* | tar -xvf - # 注意这个`-`不能省 注意： 1. 分卷文件要全部在同一个目录下；2. 分卷文件的顺序特别重要，务必保证顺序正确无误。</description>
    </item>
    <item>
      <title>Debian安装Nvidia驱动</title>
      <link>https://afrusrsc.github.io/posts/os/debian_nvidia_driver/</link>
      <pubDate>Fri, 28 Mar 2025 23:00:49 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_nvidia_driver/</guid>
      <description>背景 系统安装完之后，默认的显卡驱动就能好好的工作，这点还是比较满意的，但用久了之后就会发现：看个高清视频啥的，CPU使用率就会蹭蹭上去，风扇呼呼的，总感觉N卡压根就没派上用场，所以就想换上Nvidia的闭源驱动看看效果。
安装驱动 准备工作 修改/etc/apt/sources.list，在main后加入contrib non-free，已有则跳过
禁用BIOS中的Secure Boot（！！！非常非常非常重要！！！）
由于我一开始没有禁用Secure Boot，反复安装并修改了许多配置，浪费时间不说，原始安装能否像以下步骤那样光滑已无法考证，除非把系统也重装了。
安装 更新包索引 1 sudo apt update 安装nvidia-detect 1 sudo apt install nvidia-detect 运行nvidia-detect，我的提示安装nvidia-driver即可
安装nvidia-driver
1 sudo apt install nvidia-driver 重启 双卡切换 Debian官方仓库中并没有nvidia-prime，所以使用envycontrol来实现。
下载envycontrol
安装
1 sudo apt install ./python3-envycontrol_3.5.1-1_all.deb 查看当前显卡模式sudo envycontrol --query
切换显卡
1 2 3 sudo envycontrol -s integrated # 切换到 集显 sudo envycontrol -s hybrid # 切换到 混合模式 sudo envycontrol -s nvidia # 切换到 N卡 重启 </description>
    </item>
    <item>
      <title>解决Debian安装巨慢的问题</title>
      <link>https://afrusrsc.github.io/posts/os/debian_install_slowly/</link>
      <pubDate>Wed, 26 Mar 2025 12:46:29 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_install_slowly/</guid>
      <description>问题及原因 Debian安装过程中会有一个阶段下载特别慢，即便是在安装过程中更换了国内源，仍然是巨慢无比，其根本原因是：更换的源并不包含安全更新部分。
当然，如果是网卡硬件不在默认的安装包驱动范围内，这种情况如果不在安装过程中安装相关驱动，压根也不会遇到下载慢的情况。如果使用的是最新的完整的DVD安装包，可能也不会遇到下载慢的情况。
解决方案 断网安装 最简单的办法就是断网安装，安装完之后再彻底更换源，最后再进行更新。这也是比较适合小白的方案。
至于断网的时机，可选择一开始就不联网，也可选择在下载慢的时候断网。建议小白选择后者。
安装过程中彻底更换源 原理 安装过程其实本身就是运行了一个简版的、定制的linux系统，只不过整个安装过程是在其中一个终端中（命令终端或图形终端）完成的，那么，安装过程中自然可以从别的终端界入并完成更换源，如此即可解决下载过程巨慢的问题，同时，系统安装好之后也无需再考虑更换源的问题。
具体操作 正常安装进行到选择国内源这一步
按Ctrl+Alt+F2或Ctrl+Alt+F3进入终端，会有提示，直接回车
注意：
Ctrl+Alt+F1为命令行安装终端，图形安装后台也使用该终端
Ctrl+Alt+F2和Ctrl+Alt+F3为暂未使用的命令行终端
Ctrl+Alt+F4为日志输出终端
Ctrl+Alt+F5为图形终端
执行如下命令 1 2 cat /target/etc/apt/sources.list # /target 是正在安装的新系统的挂载点 如果第1.步选择完国内源之后没有继续，这里空的，或者只有deb cdrom: [pebian GNu/Linux 12.9.0Bookworm- 0fficial amd64 NETINST with irmware 20250111-10:54]/ bookworm contrib main non-free-firmware；如果第1.步选择完国内源之后继续了，并且此时已经进入下载阶段了，则会看到类似以下的内容：
1 2 3 4 5 6 7 8 9 deb cdrom: [pebian GNu/Linux 12.9.0Bookworm- 0fficial amd64 NETINST with irmware 20250111-10:54]/ bookworm contrib main non-free-firmware deb http://mirrors.ustc.edu.cn/debian/ bookworm main non-free-firmware deb-src http://mirrors.</description>
    </item>
    <item>
      <title>祼盘安装win10时调整EFI分区大小</title>
      <link>https://afrusrsc.github.io/posts/os/win_efi/</link>
      <pubDate>Tue, 04 Mar 2025 23:09:36 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/win_efi/</guid>
      <description>背景 鸟枪换大炮，把旧电脑的HDD升级成SSD了，是替换而非加装，所以需要重新安装系统。
依旧是安装windows+linux双系统，由于windows安装时会覆盖EFI分区，不想折腾的话就先装windows再装linux。
手里有windows的安装盘（原版iso，不带pe），安装时分区会自动分出来100M的EFI分区，但装双系统的话，很可能会不够用，但又不想再烧个pe，也不想装完系统再折腾分区。
尝试过程中发现可以进入命令提示符，于是网上搜索命令行分区工具，找到了DiskPart，尝试后可以完美实现需求。
解决方案 使用安装盘引导启动，进入到分区界面
取消安装，回到初始界面
按win+r会跳出一个新的界面，找到命令提示符并运行
输入diskpart回车，进入分区工具
list disk列出磁盘列表，记住需要分区的磁盘号
select disk n选择要分区的磁盘（n为上一步查出的磁盘号）
clean all删除所有分区（如果有的话）
convert gpt将磁盘转换为GPT分区列表（这年头就不要再用MBR了）
create partition efi size=512创建512M的EFI分区
exit退出分区工具
关闭命令提示符
继续安装
注意 该方案适用于win10，其它版本windows未测试！</description>
    </item>
    <item>
      <title>配置校时服务</title>
      <link>https://afrusrsc.github.io/posts/os/debian_ntp/</link>
      <pubDate>Wed, 13 Mar 2024 22:25:24 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_ntp/</guid>
      <description> 从其它平台迁移而来
安装ntpdate 1 sudo apt install ntpdate 手动校时 1 sudo ntpdate -u ntp.ntsc.ac.cn -u：可越过防火墙与主机同步
ntp.ntsc.ac.cn：国家授时中心的服务地址
同步硬件时间 1 sudo hwclock -w 定时校时 校时脚本 1 vi ntp.sh 写入以下内容：
1 2 3 #!/bin/bash /usr/sbin/ntpdate -u ntp.ntsc.ac.cn; /usr/sbin/hwclock -w; 授予执行权限
1 chmod +x ntp.sh 创建定时任务 1 sudo crontab -e 加入以下内容：
1 */30 * * * * /root/ntp.sh # 表示每30分钟执行一次 </description>
    </item>
    <item>
      <title>Debian上使用蓝牙音响</title>
      <link>https://afrusrsc.github.io/posts/os/debian_bluetooth/</link>
      <pubDate>Fri, 16 Feb 2024 21:26:44 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_bluetooth/</guid>
      <description> 从其它平台迁移而来
安装驱动
安装蓝牙管理工具blueman
1 sudo apt install blueman 此时连接蓝牙音响报br-connection-profile-unavailable
编辑/etc/pulse/default.pa，找到并注释掉load-module module-bluetooth-discover行
编辑/usr/bin/start-pulseaudio-x11，在如下位置添加/usr/bin/pactl load-module module-bluetooth-discover
1 2 3 4 5 if [ x&amp;#34;$SESSION_MANAGER&amp;#34; != x ] ; then /usr/bin/pactl load-module module-x11-xsmp &amp;#34;display=$DISPLAY xauthority=$XAUTHORITY session_manager=$SESSION_MANAGER&amp;#34; &amp;gt; /dev/null # 添加下面一行 /usr/bin/pactl load-module module-bluetooth-discover fi 重启 </description>
    </item>
    <item>
      <title>把旧笔记本电脑改为家用服务器</title>
      <link>https://afrusrsc.github.io/posts/os/debian_server_install/</link>
      <pubDate>Mon, 22 Jan 2024 21:45:33 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_server_install/</guid>
      <description>从其它平台迁移而来
背景 有一台旧笔记本电脑，电池鼓包已拆除，显示器画面乱跳（暂未查出原因，外接显示器正常），闲置已久，计划改为家用服务器使用。
系统安装及配置 安装系统 冒着闪瞎眼的风险，安装Debian，安装过程尽可能简化。
注意事项：
特别注意下网卡是否需要另外下载驱动（本机刚好不需要，忽略）
安装过程中会提示选择源，但Debian 软件安全更新源并不会采用所选源，所以，安装过程可能会因此变得很漫长
由于是做服务器用，所以不需要安装桌面环境，本着最小安装原则，什么都不安装（包括标准系统工具，因为很多用不上）
配置系统 安装ssh服务 由于显示问题，先安装ssh服务，然后远程进行其它配置
1 2 3 # root登录 apt update apt install openssh-server -y 安装并配置sudo 1 2 apt install sudo -y usermod -aG sudo xxx # xxx为用户名 查看ip，并远程登录 由于显示问题，直接通过路由器查得。
1 ssh 用户名@ip地址 修改ssh端口 1 sudo vi /etc/ssh/sshd_config 取消Port 22的注释，再添加一行Port xxx
重启ssh服务
1 sudo systemctl restart sshd.service 退出ssh并用新端口登录
1 ssh -p 新端口 用户名@ip地址 登录成功后再注释Port 22，再次重启ssh服务
修改源 1 sudo vi /etc/apt/sources.</description>
    </item>
    <item>
      <title>Debian上安装PostgreSQL</title>
      <link>https://afrusrsc.github.io/posts/os/debian_pg_install/</link>
      <pubDate>Mon, 15 Jan 2024 23:07:40 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_pg_install/</guid>
      <description>从其它平台迁移而来
安装 Debian仓库中已包含PostgreSQL，所以，直接安装即可：
1 sudo apt install postgresql 若想使用pg官方源，则执行：
1 2 3 4 sudo sh -c &amp;#39;echo &amp;#34;deb https://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main&amp;#34; &amp;gt; /etc/apt/sources.list.d/pgdg.list&amp;#39; wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - sudo apt-get update sudo apt-get -y install postgresql 配置 重置密码 曾经安装又卸载N多次，都没能像在win上一样正常使用，其实就是安装时默认生成的是随机密码，重置下密码即可使用。
删除linux系统的postgres用户密码 1 sudo passwd -d postgres 设置linux系统的postgres用户密码 1 sudo -u postgres passwd 登录数据库 1 sudo -u postgres psql 修改数据库的postgres用户密码 1 ALTER USER postgres WITH PASSWORD &amp;#39;xxxxxx&amp;#39;; # 注意带分号 退出psql并重启服务 1 2 \q # 退出 psql sudo systemctl restart postgresql.</description>
    </item>
    <item>
      <title>安装Debian</title>
      <link>https://afrusrsc.github.io/posts/os/debian_install/</link>
      <pubDate>Tue, 07 Nov 2023 21:31:55 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/debian_install/</guid>
      <description>从其它平台迁移而来
Linux发行版多如牛毛，多年来的浅尝辄止，最终还是觉得Debian最合心意。
有wsl、虚拟机、物理机三种方式：其中前两种适合初期学习用，或者需要win/linux混合用的情形，同样也都需要开启硬件虚拟化；后一种适合实践演练或双系统用，当然也适用于纯linux用户使用。
wsl wsl有wsl1和wsl2之分，具体差异参考官方文档。当然，也可直接参考其安装步骤。
准备工作 win10/win11操作系统，启动自动更新并更新到最新补丁
下载Linux内核更新包
下载发行版Debian（注：离线包安装可自主控制安装路径，方便管理）
安装 开启硬件虚拟化
开启适用于Linux的Windows子系统
安装Linux内核更新包
重启，手动进行windows更新
在命令提示符中执行wsl --set-default-version 2设置默认版本
解压下载的发行版到待安装的路径（注：*.AppxBundle是包的集合，*.appx是包，本质上都是*.zip包）
进入路径中，运行debian.exe
根据提示输入用户名和密码
配置 更换源
更新系统sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y
安装补全工具sudo apt install bash-completion
进行其它个性化配置
虚拟机 准备工作 开启硬件虚拟化
安装虚拟机软件vbox
下载iso镜像（选择网络安装镜像即可）
安装 创建虚拟机
启动虚拟机，选择下载的iso启动
选择Install
选择语言（但凡有一丁点中文需求，都建议选择简体中文）
设置主机名
设置root密码，创建用户并设置密码
分区（新手可使用整个磁盘并将所有文件放在同一个分区）
选择源
选择桌面环境及其它软件
选择GRUB安装位置（启用UEFI的情况不需要）
配置 安装有桌面环境的直接在GUI下配置即可，以下为无桌面环境的配置：
以root用户登录
更新系统apt update &amp;amp;&amp;amp; apt upgrade -y
安装工具apt install bash-completion sudo
设置用户sudo权限usermod -aG sudo xxx
退出登录</description>
    </item>
    <item>
      <title>Linux开机时间优化</title>
      <link>https://afrusrsc.github.io/posts/os/linux_sys_start_time/</link>
      <pubDate>Tue, 25 Jul 2023 22:41:48 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/linux_sys_start_time/</guid>
      <description> 从其它平台迁移而来
分析开机启动时间 1 sudo systemd-analyze 列出开机启动项 1 sudo systemd-analyze blame 关闭开机启动项 注意：不要随意关闭，查资料确定关闭会产生的影响，评估后再进行关闭！
1 sudo systemctl disable xxx 恢复已关闭的开机启动项 1 sudo systemctl enable xxx </description>
    </item>
    <item>
      <title>安装LMDE</title>
      <link>https://afrusrsc.github.io/posts/os/lmde_install/</link>
      <pubDate>Mon, 14 Dec 2020 16:57:26 +0800</pubDate>
      <guid>https://afrusrsc.github.io/posts/os/lmde_install/</guid>
      <description>从其它平台迁移而来
背景 一直以来，都对Linux心中神往，一直以来，也都对bug 10(win 10)深恶痛绝，但是对Linux却始终是浅尝辄止——要么是在虚拟机里玩，要么就是wls，真要装在真机上也不过是停留在安装完而已，真正用起来还是差得太多太远。
不要跟我提wls2，用这货还得升到最新的bug 10，少不了又是自动升级又是各种应用什么的，那可一点儿都不纯净，还是现在用的LTSC勉强能将就，虽然还是动不动就会自动升级，而且通常还是升级失败再回滚的二货，但是比那种二货都不如的还是要强一些的。
前段时间老婆打下来一台旧笔记本，i3 M370，4G内存，500G机械盘，也是实实在在的老古董了(还有更老的台机在角落里吃土呢)，但质量还是不错的，运行也还算稳定，就动了心思准备拿来搞Linux，实实在在用起来。
选择发行版 Linux的发行版还是非常多的，鉴于以前捣鼓的大多都是Debian系的，这次还打算入手Debian系，至于Redhat系，以后再说吧。
由于是老爷机，桌面环境想要在稳定的基础上尽可能轻量。至于不要桌面环境，彻头彻尾地搞tty，心里还是发怵的，毕竟是以学习为主，免不了要上网查资料，而且我这英语渣渣还是不要搞得太有挑战性，免得一不留神就跑偏了。
Debian 多年前装过Debian，那时对中文的支持真的是——一言难尽，不过这么多年过去了，可能会有点长进吧，所以就先装了最新的尝试了下，然后……我真的没发现有啥长进的。
Ubuntu Ubuntu是在Debian上弄起来的，最早时候玩的也是这货，wls里也是这货，而且各种桌面环境的发行版也都有，说实话，整体感观还是不错的！只不过这货现在好你搞什么平台大一统的，臃肿了不是一星半点，而且还又搞了个Snap什么的，感觉已经不再是我识别的那个Ubuntu，已经有向bug 10靠拢的倾向了，再加上这是老爷机，果断放弃。
Linux Mint Linux Mint这货原先是在Ubuntu上搞起来的，当年也试用过Mate版的，体验挺好的，即兼容了Ubuntu的众多优势，又定位于桌面系统，没有变得那么肥胖，算是比较符合我的选择标准了。最近看到有基于Debian的LMDE版，思虑再三，决定就用这货了！
Kali Linux Kali Linux这货也是在Debian上搞起来的，据说是专为黑客而生，估计以后会尝试吧。
安装LMDE 制作安装盘 下载LMDE的iso镜像
使用UltraISO把镜像写入U盘
注意：写入的时候写入方式一定要选择RAW，否则从U盘启动时会报错failed to load ldlinux.c32
安装 进BIOS设置U盘为第一启动项，保存
从U盘引导，自动进入Live模式
运行桌面上Install启动安装向导开始安装
联网设置先跳过，否则整个安装过程巨漫长
分区的环节，我直接把原有的分区全删了，使用整块硬盘
安装grub的分区一定要选好，像我这种直接选了整块硬盘，不管现在选哪个，后期更新时再出现选grub安装分区的一定要和现在选的保持一致(我就是抽风了一下搞得grub引导不了，折腾半天也没修复回来，最后默默选择了重装)
根据提示拔掉U盘，并按回车重启
联网更新 联网 重启进入系统后就可以放心的联网了，若是wifi联不上就直接用网线吧。反正我是联不上wifi，起初以为是驱动问题，折腾了一整天也没搞定，后来索性放弃了，估计是无线网卡有问题，以后再说吧。
更新 菜单-&amp;gt;首选项-&amp;gt;系统设置-&amp;gt;软件源，输入密码，选择一个国内的源，哪个快选哪个就行，当然也可以不选，只要你能忍受那蜗牛速度
在终端里执行命令sudo apt update &amp;amp;&amp;amp; sudo apt upgrade -y，输入密码，等待更新完成
后记 玩Linux就要敢于折腾、勇于折腾
不要问我要图，给图了你们还咋折腾？PS:其实是忘了弄，后来又懒得弄</description>
    </item>
  </channel>
</rss>
